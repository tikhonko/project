class Node:
    def __init__(self, name, line, index=None):
        self.name=name
        self.index=index
        self.line=line
class Graph:
    @classmethod
    def create_from_nodes(self, nodes):
        return Graph(len(nodes), len(nodes), nodes)
    '''Создаёт граф из списка вершин'''
    
    def __init__(self, row, col, nodes=None):
        self.adj_mat=[[0]*col for _ in range(row)]
        self.nodes=nodes
        for i in range(len(self.nodes)):
            self.nodes[i].index=i
        

    def connect(self, node1, node2, weight):
        node1, node2 = self.get_index_from_node(node1), self.get_index_from_node(node2)
        self.adj_mat[node1][node2] = weight
        self.adj_mat[node2][node1]=weight
    '''Двусторонне соединяет две вершины'''

    def connections_from(self, node):
        node = self.get_index_from_node(node)
        return [(self.nodes[col_num], self.adj_mat[node][col_num]) for col_num in range(len(self.adj_mat[node])) if self.adj_mat[node][col_num] != 0]
    '''Возвращает список вершин, соединённых с заданной'''

    

    
    def connect_name(self, name1, name2, weight1):
        node11=None
        node12=None
        for i in self.nodes:
            if i.name==name1:
                node11=i
            
            if i.name==name2:
                node12=i
        self.connect(node11, node12, weight1)
'''Соединяет станции по названию'''
    def get_index_from_node(self, node):
        if isinstance(node, int):
            return(node)
        else:
            return node.index
    '''Выдаёт индекс узла'''
    def find(self, nodename1=input(), nodename2=input()):
        node=n1
        node2=n2
        for i in self.nodes:
            if i.name==nodename1:
                node=i
            if i.name==nodename2:
                node2=i
        nodenum=self.get_index_from_node(node)
        dist=[None]*len(self.nodes)
        for i in range(len(dist)):
            dist[i]=[float('inf')]
            dist[i].append([self.nodes[nodenum]])
        
        dist[nodenum][0]=0
        
        queue=[i for i in range(len(self.nodes))]
        seen=set()
        while len(queue)>0:
            min_dist=float('inf')
            min_node=None
            for n in queue:
                if dist[n][0]<=min_dist and n not in seen:
                    min_dist=dist[n][0]
                    min_node=n
            queue.remove(min_node)
            seen.add(min_node)
            connections=self.connections_from(min_node)
            for (node, weight) in connections:
                
                tot_dist=weight+min_dist
                if tot_dist<dist[node.index][0]:
                    dist[node.index][0]=tot_dist
                    dist[node.index][1]=list(dist[min_node][1])
                    dist[node.index][1].append(node)
        return [dist[node2.index], dist[100]]
    '''Находит кратчайший путь между заданными узлами'''
n1=Node('Пятницкое шоссе', 3, 1)
n2=Node('Митино', 3, 2)
n3=Node('Волоколамская 3', 3, 3)
n4=Node('Мякинино', 3, 4)
n5=Node('Строгино', 3, 5)
n6=Node('Крылатское', 3, 6)
n7=Node('Молодёжная', 3, 7)
n8=Node('Кунцевская 3', 3, 8)
n9=Node('Славянский бульвар 3', 3, 9)
n10=Node('Парк победы 3', 3, 10)
n11=Node('Киевская 3', 3, 11)
n12=Node('Смоленская 3', 3, 12)
n13=Node('Арбатская 3', 3, 13)
n14=Node('Площадь революции', 3, 14)
n15=Node('Курская 3', 3, 15)
n16=Node('Электрозаводская 3', 3, 16)
n17=Node('Семёновская', 3, 17)
n18=Node('Партизанская', 3, 18)
n19=Node('Измайловская', 3, 19)
n20=Node('Первомайская', 3, 20)
n21=Node('Щёлковская', 3, 21)

n22=Node('Коммунарка', 1, 22)
n23=Node('Ольховая', 1, 23)
n24=Node('Прокшино', 1, 24)
n25=Node('Филатов луг', 1, 25)
n26=Node('Саларьево', 1, 26)
n27=Node('Румянцево', 1, 27)
n28=Node('Тропарево', 1, 28)
n29=Node('Юго-западная', 1, 29)
n30=Node('Проспект Вернадского 1', 1, 30)
n31=Node('Университет', 1, 31)
n32=Node('Воробьёвы горы', 1, 32)
n33=Node('Спортивная', 1, 33)
n34=Node('Фрунзенская', 1, 34)
n35=Node('Парк культуры 1', 1, 35)
n36=Node('Кропоткинская', 1, 36)
n37=Node('Библиотека имени Ленина', 1, 37)
n38=Node('Охотный ряд', 1, 38)
n39=Node('Лубянка', 1, 39)
n40=Node('Чистые пруды', 1, 40)
n41=Node('Красные ворота', 1, 41)
n42=Node('Комсомольская 1', 1, 42)
n43=Node('Красносеьская', 1, 43)
n44=Node('Сокольники', 1, 44)
n45=Node('Преображенская площадь', 1, 45)
n46=Node('Черкизовская', 1, 46)
n47=Node('Бульвар Рокоссовского 1', 1, 47)

n48=Node('Савёловская 11', 11, 48)
n49=Node('Петровский парк', 11, 49)
n50=Node('ЦСКА 11', 11, 50)
n51=Node('Хорошёвская 11', 11, 51)
n56=Node('Шелепиха 11', 11, 56)
n57=Node('Деловой центр 11', 11, 57)
n58=Node('Народное ополчение', 11, 58)
n59=Node('Мнёвники', 11, 59)
n60=Node('Терехово', 11, 60)
n61=Node('Кунцевская 11', 11, 61)
n62=Node('Давыдково', 11, 62)
n63=Node('Аминьевская', 11, 63)
n64=Node('Мичуринский проспект 11', 11, 64)
n65=Node('Проспект Вернадского 11', 11, 65)
n66=Node('Новаторская', 11, 66)
n67=Node('Воронцовская', 11, 67)
n68=Node('Зюзино', 11, 68)
n69=Node('Каховская', 11, 69)

n70=Node('Ховрино', 2, 70)
n71=Node('Беломорская', 2, 71)
n72=Node('Речной вокзал', 2, 72)
n73=Node('Водный сталион', 2, 73)
n74=Node('Войковская', 2, 74)
n75=Node('Сокол', 2, 75)
n76=Node('Аэропорт', 2, 76)
n77=Node('Динамо', 2, 77)
n78=Node('Белорусская 2', 2, 78)
n79=Node('Маяковская', 2, 79)
n80=Node('Тверская', 2, 80)
n81=Node('Театральная', 2, 81)
n82=Node('Новокузнецкая', 2, 82)
n83=Node('Павелецкая 2', 2, 83)
n84=Node('Автозаводская 2', 2, 84)

n85=Node('Орехово 2', 21, 85)
n86=Node('Домодедовская', 21, 86)
n87=Node('Красногвардейская', 21, 87)
n88=Node('Алма-Атинская', 21, 88)

n336=Node('Автозаводская КМ', 22, 336)
n337=Node('Технопарк', 22, 337)
n338=Node('Коломенская', 22, 338)
n339=Node('Каширская', 22, 339)
n340=Node('Кантемировская', 22, 340)
n341=Node('Царицыно КМ', 22, 341)
n342=Node('Москворечье КМ', 22, 342)
n343=Node('Орехово КМ', 22, 343)

n89=Node('Кунцевская 4', 4, 89)
n90=Node('Пионерская', 4, 90)
n91=Node('Филёвский парк', 4, 91)
n92=Node('Багратионовская', 4, 92)
n93=Node('Фили 4', 4, 93)
n94=Node('Кутузовская 4', 4, 94)
n95=Node('Студенческая', 4, 95)
n96=Node('Киевская 4', 4, 96)
n97=Node('Смоленская 4', 4, 97)
n98=Node('Арбатская 4', 4, 98)
n99=Node('Александровский сад', 4, 99)
n1000=Node('Международная', 4)
n1001=Node('Выставочная', 4)

n100=Node('Проспект мира 5', 5, 100)
n101=Node('Комсомольская 5', 5, 101)
n102=Node('Курская 5', 5, 102)
n103=Node('Таганская 5', 5, 103)
n104=Node('Павелецкая 5', 5, 104)
n105=Node('Добрынинская', 5, 105)
n106=Node('Октябрьская 5', 5, 106)
n107=Node('Парк культуры 5', 5, 107)
n108=Node('Киевская 5', 5, 108)
n109=Node('Краснопресненская', 5, 109)
n110=Node('Белорусская 5', 5, 110)
n111=Node('Новослободская', 5, 111)

n112=Node('Медведково', 6, 112)
n113=Node('Бабушкинская', 6, 113)
n114=Node('Свиблово', 6, 114)
n115=Node('Ботанический сад 6', 6, 115)
n116=Node('ВДНХ', 6, 116)
n117=Node('Алексеевская', 6, 117)
n118=Node('Рижская 6', 6, 118)
n119=Node('Проспект мира 6', 6, 119)
n120=Node('Сухаревская', 6, 120)
n121=Node('Тургеневская', 6, 121)
n122=Node('Китай-город 6', 6, 122)
n123=Node('Третьяковская 6', 6, 123)
n124=Node('Октябрьская 6', 6, 124)
n125=Node('Шаболовская', 6, 125)
n126=Node('Ленинский проспект', 6, 126)
n127=Node('Академическая', 6, 127)
n128=Node('Профсоюзная', 6, 128)
n129=Node('Новые черёмушки', 6, 129)
n130=Node('Калужская', 6, 130)
n131=Node('Беляево', 6, 131)
n132=Node('Коньково', 6, 132)
n133=Node('Тёплый стан', 6, 133)
n134=Node('Ясенево', 6, 134)
n135=Node('Новоясеневская', 6, 135)

n136=Node('Планерная', 7, 136)
n137=Node('Сходненская', 7, 137)
n138=Node('Тушинская 7', 7, 138)
n139=Node('Спартак', 7, 139)
n140=Node('Щукинская 7', 7, 140)
n141=Node('Октябрьское поле', 7, 141)
n142=Node('Полежаевская', 7, 142)
n143=Node('Беговая 7', 7, 143)
n144=Node('Улица 1905 года', 7, 144)
n145=Node('Баррикадная', 7, 145)
n146=Node('Пушкинская', 7, 146)
n147=Node('Кузнецкий мост', 7, 147)
n148=Node('Китай-город 7', 7, 148)
n149=Node('Таганская 7', 7, 149)
n150=Node('Пролетарская', 7, 150)
n151=Node('Волгоградский проспект', 7, 151)
n152=Node('Текстильщики 7', 7, 152)
n153=Node('Кузьминки', 7, 153)
n154=Node('Рязанский проспект', 7, 154)
n155=Node('Выхино', 7, 155)
n156=Node('Лермонтовскй проспект', 7, 156)
n157=Node('Жулебино', 7, 157)
n158=Node('Котельники', 7, 158)

n159=Node('Новокосино', 8, 159)
n160=Node('Новогиреево', 8, 160)
n161=Node('Перово', 8, 161)
n162=Node('Шоссе энтузиастов 8', 8, 162)
n163=Node('Авиамоторная 8', 8, 163)
n164=Node('Площадь Ильича', 8, 164)
n165=Node('Марксистская', 8, 165)
n166=Node('Третьяковская 8', 8, 166)
n167=Node('Деловой центр 8', 81, 167)
n168=Node('Парк победы 8', 81, 168)
n169=Node('Минская', 81, 169)
n170=Node('Ломоносовский проспект', 81, 170)
n171=Node('Раменки', 81, 171)
n172=Node('Мичуринский проспект 8', 81, 172)
n173=Node('Озёрная', 81, 173)
n174=Node('Говорово', 81, 174)
n175=Node('Солнцево', 81, 175)
n176=Node('Боровское шоссе', 81, 176)
n177=Node('Новопеределкино', 81, 177)
n178=Node('Рассказовка', 81, 178)

n179=Node('Алтуфьево', 9, 179)
n180=Node('Бибирево', 9, 180)
n181=Node('Отрадное', 9, 181)
n182=Node('Владыкино 9', 9, 182)
n183=Node('Петровско-разумовская 9', 9, 183)
n184=Node('Тимирязевская 9', 9, 184)
n185=Node('Дмитровская 9', 9, 185)
n186=Node('Савёловская 9', 9, 186)
n187=Node('Менделеевская', 9, 187)
n188=Node('Цветной бульвар', 9, 188)
n189=Node('Чеховская', 9, 189)
n190=Node('Боровицкая', 9, 190)
n191=Node('Полянка', 9, 191)
n192=Node('Серпуховская', 9, 192)
n193=Node('Тульская', 9, 193)
n194=Node('Нагатинская', 9, 194)
n195=Node('Нагорная', 9, 195)
n196=Node('Нахимовский проспект', 9, 196)
n197=Node('Севастопольская', 9, 197)
n198=Node('Чертановская', 9, 198)
n199=Node('Южная', 9, 199)
n200=Node('Пражская', 9, 200)
n201=Node('Улица академика Янгеля', 9, 201)
n202=Node('Аннино', 9, 202)
n203=Node('Бульвар Дмитрия Донского', 9, 203)

n204=Node('Селигеркая', 10, 204)
n205=Node('Верхние лихоборы', 10, 205)
n206=Node('Окружная 10', 10, 206)
n207=Node('Петровско-разумовская 10', 10, 207)
n208=Node('Фонвизинская', 10, 208)
n209=Node('Бутырская', 10, 209)
n210=Node('Марьина роща', 10, 210)
n211=Node('Достоевская', 10, 211)
n212=Node('Трубная', 10, 212)
n213=Node('Сретенский бульвар', 10, 213)
n214=Node('Чкаловская', 10, 214)
n215=Node('Римская', 10, 215)
n216=Node('Крестьянская застава', 10, 216)
n217=Node('Дубровка 10', 10, 217)
n218=Node('Кожуховская', 10, 218)
n219=Node('Печатники 10', 10, 219)
n220=Node('Волжская', 10, 220)
n221=Node('Люблино', 10, 221)
n222=Node('Братиславская', 10, 222)
n223=Node('Марьино', 10, 223)
n224=Node('Борисово', 10, 224)
n225=Node('Шипиловская', 10, 225)
n226=Node('Зябликово', 10, 226)

n227=Node('Битцевский парк', 12, 227)
n228=Node('Лесопарковая', 12, 228)
n229=Node('Улица Старокачаловская', 12, 229)
n230=Node('Улица Скобелевская', 12, 230)
n231=Node('Бульвар адмирала Ушакова', 12, 231)
n232=Node('Улица Горчакова', 12, 232)
n233=Node('Бунинская аллея', 12, 233)

n234=Node('Ботанический сад 14', 14, 234)
n235=Node('Ростокино', 14, 235)
n236=Node('Белокаменная', 14, 236)
n237=Node('Бульвар Рокоссовского 14', 14, 237)
n238=Node('Локомотив', 14, 238)
n239=Node('Измайлово', 14, 239)
n240=Node('Соколиная гора', 14, 240)
n241=Node('Шоссе энтузиастов', 14, 241)
n242=Node('Андроновка', 14, 242)
n243=Node('Нижегородская 14', 14, 243)
n244=Node('Новохохловская 14', 14, 244)
n245=Node('Угрешская', 14, 245)
n246=Node('Дубровка 14', 14, 246)
n247=Node('Автозаводская 14', 14, 247)
n248=Node('ЗИЛ', 14, 248)
n249=Node('Верхние котлы', 14, 249)
n250=Node('Крымская', 14, 250)
n251=Node('Площадь Гагарина', 14, 251)
n252=Node('Лужники', 14, 252)
n253=Node('Кутузовская 14', 14, 253)
n254=Node('Деловой центр 14', 14, 254)
n255=Node('Хорошёво', 14, 255)
n256=Node('Зорге', 14, 256)
n257=Node('Панфиловская', 14, 257)
n258=Node('Стрешнево 14', 14, 258)
n259=Node('Балтийская', 14, 259)
n260=Node('Коптево', 14, 260)
n261=Node('Лихоборы', 14, 261)
n262=Node('Окружная 14', 14, 262)
n263=Node('Владыкино 14', 14, 263)
n300=Node('Шелёпиха 14', 14, 264)

n264=Node('Электрозаводская 15', 15, 265)
n265=Node('Лефортово', 15, 266)
n266=Node('Авиамоторная 15', 15, 267)
n267=Node('Нижегородская 15', 15, 268)
n268=Node('Стахановская', 15, 269)
n269=Node('Окская', 15)
n270=Node('Юго-восточная', 15)
n271=Node('Косино', 15)
n272=Node('Улица Дмитриевского', 15)
n273=Node('Лухмановская', 15)
n274=Node('Некрасовка', 15)
n275=Node('Одинцово', 16)
n276=Node('Баковка', 16)
n277=Node('Сколково', 16)
n278=Node('Немчиновка', 16)
n279=Node('Сетунь', 16)
n280=Node('Рабочий посёлок', 16)
n281=Node('Кунцевская D1', 16)
n282=Node('Славянский бульвар D1', 16)
n283=Node('Фили D1', 16)
n284=Node('Тестовская', 16)
n285=Node('Беговая D1', 16)
n286=Node('Белорусская D1', 16)
n287=Node('Савёловская D1', 16)
n288=Node('Тимирязевская D1', 16)
n289=Node('Окружная D1', 16)
n290=Node('Дегунино', 16)
n291=Node('Бескудниково', 16)
n292=Node('Лианозово', 16)
n293=Node('Марк', 16)
n294=Node('Новодачная', 16)
n295=Node('Долгопрудная', 16)
n296=Node('Водники', 16)
n297=Node('Хлебниково', 16)
n298=Node('Шереметьевская', 16)
n299=Node('Лобня', 16)

n301=Node('Нахабино', 17)
n302=Node('Аникеевка', 17)
n303=Node('Опалиха', 17)
n304=Node('Красногорская', 17)
n305=Node('Павшино', 17)
n306=Node('Пенягино', 17)
n307=Node('Волоколамская D2', 17)
n0=Node('Трикотажная', 17)
n308=Node('Тушинская D2', 17)
n309=Node('Щукинская D2', 17)
n310=Node('Стрешнево D2', 17)
n311=Node('Красный балтиец', 17)
n312=Node('Гражданская', 17)
n313=Node('Дмитровская D2', 17)
n314=Node('Рижская D2', 17)
n315=Node('Площадь трёх вокзалов', 17)
n316=Node('Курская D2', 17)
n317=Node('Москва-товарная', 17)
n318=Node('Калитники', 17)
n319=Node('Новохохловская D2', 17)
n320=Node('Текстильщики D2', 17)
n321=Node('Печатники D2', 17)
n322=Node('Люблино', 17)
n323=Node('Депо', 17)
n324=Node('Прерва', 17)
n325=Node('Курьяново', 17)
n326=Node('Москворечье D2', 17)
n327=Node('Царицыно D2', 17)
n328=Node('Покровское', 17)
n329=Node('Красный строитель', 17)
n330=Node('Битца', 17)
n331=Node('Бутово', 17)
n332=Node('Щербинка', 17)
n333=Node('Остафьево', 17)
n334=Node('Силикатная', 17)
n335=Node('Подольск', 17)


graph=Graph.create_from_nodes([n1000, n1001, n0, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106, n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117, n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128, n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139, n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162, n163, n164, n165, n166, n167, n168, n169, n170, n171, n172, n173, n174, n175, n176, n177, n178, n179, n180, n181, n182, n183, n184, n185, n186, n187, n188, n189, n190, n191, n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202, n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213, n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224, n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235, n236, n237, n238, n239, n240, n241, n242, n243, n244, n245, n246, n247, n248, n249, n250, n251, n252, n253, n254, n255, n256, n257, n258, n259, n260, n261, n262, n263, n264, n265, n266, n267, n268, n269, n270, n271, n272, n273, n274, n275, n276, n277, n278, n279, n280, n281, n282, n283, n284, n285, n286, n286, n287, n288, n289, n290, n291, n292, n293, n294, n295, n296, n297, n298, n299, n300, n301, n302, n303, n304, n305, n306, n307, n308, n309, n310, n311, n312, n313, n314, n315, n316, n317, n318, n319, n320, n321, n322, n323, n324, n325, n326, n327, n328, n329, n330, n331, n332, n333, n334, n335, n336, n337, n338, n339, n340, n341, n342, n343])
graph.connect(n1, n2, 2)
graph.connect(n2, n3, 3)
graph.connect(n3, n4, 2)
graph.connect(n4, n5, 4)
graph.connect(n5, n6, 2)
graph.connect(n6, n7, 8)
graph.connect(n7, n8, 3)
graph.connect(n8, n9, 3)
graph.connect(n9, n10, 4)
graph.connect(n10, n11, 5)
graph.connect(n11, n12, 2)
graph.connect(n12, n13, 2)
graph.connect(n13, n14, 2)
graph.connect(n14, n15, 3)
graph.connect(n15, n16, 3)
graph.connect(n16, n17, 2)
graph.connect(n17, n18, 2)
graph.connect(n18, n19, 3)
graph.connect(n19, n20, 2)

graph.connect(n48, n49, 3)
graph.connect(n49, n50, 3)
graph.connect(n50, n51, 3)
graph.connect(n51, n56, 5)
graph.connect(n56, n57, 3)
graph.connect(n51, n58, 4)
graph.connect(n58, n59, 3)
graph.connect(n59, n60, 3)
graph.connect(n60, n61, 3)
graph.connect(n61, n62, 3)
graph.connect(n62, n63, 3)
graph.connect(n63, n64, 3)
graph.connect(n64, n65, 3)
graph.connect(n65, n66, 2)
graph.connect(n66, n67, 3)
graph.connect(n67, n68, 3)
graph.connect(n68, n68, 2)

graph.connect(n22, n23, 2)
graph.connect(n23, n24, 4)
graph.connect(n24, n25, 4)
graph.connect(n25, n26, 4)
graph.connect(n26, n27, 3)
graph.connect(n27, n28, 3)
graph.connect(n28, n29, 4)
graph.connect(n29, n30, 3)
graph.connect(n30, n31, 3)
graph.connect(n31, n32, 3)
graph.connect(n32, n33, 3)
graph.connect(n33, n34, 2)
graph.connect(n34, n35, 3)
graph.connect(n35, n36, 2)
graph.connect(n36, n37, 2)
graph.connect(n37, n38, 2)
graph.connect(n38, n39, 2)
graph.connect(n39, n40, 2)
graph.connect(n40, n41, 2)
graph.connect(n41, n42, 2)
graph.connect(n42, n43, 2)
graph.connect(n43, n44, 2)
graph.connect(n44, n45, 4)
graph.connect(n45, n46, 3)
graph.connect(n46, n47, 3)

graph.connect(n70, n71, 2)
graph.connect(n71, n72, 2)
graph.connect(n72, n73, 3)
graph.connect(n73, n74, 3)
graph.connect(n74, n75, 3)
graph.connect(n75, n76, 2)
graph.connect(n76, n77, 3)
graph.connect(n77, n78, 3)
graph.connect(n78, n79, 2)
graph.connect(n79, n80, 2)
graph.connect(n80, n81, 2)
graph.connect(n81, n82, 3)
graph.connect(n82, n83, 2)
graph.connect(n83, n84, 4)

graph.connect(n85, n86, 2)
graph.connect(n86, n87, 2)
graph.connect(n87, n88, 5)

graph.connect(n336, n337, 8)
graph.connect(n337, n338, 5)
graph.connect(n338, n339, 9)
graph.connect(n339, n340, 6)
graph.connect(n340, n341, 6)
graph.connect(n339, n342, 9)
graph.connect(n342, n343, 9)

graph.connect(n89, n90, 2)
graph.connect(n90, n91, 2)
graph.connect(n91, n92, 2)
graph.connect(n92, n93, 3)
graph.connect(n93, n94, 3)
graph.connect(n94, n95, 2)
graph.connect(n95, n96, 3)
graph.connect(n96, n97, 3)
graph.connect(n97, n98, 2)
graph.connect(n98, n99, 2)
graph.connect(n96, n1000, 5)
graph.connect(n98, n1001, 2)

graph.connect(n100, n101, 3)
graph.connect(n101, n102, 3)
graph.connect(n102, n103, 3)
graph.connect(n103, n104, 2)
graph.connect(n104, n105, 2)
graph.connect(n105, n106, 2)
graph.connect(n106, n107, 2)
graph.connect(n107, n108, 3)
graph.connect(n108, n109, 3)
graph.connect(n109, n110, 3)
graph.connect(n110, n111, 2)
graph.connect(n111, n100, 3)

graph.connect(n112, n113, 3)
graph.connect(n113, n114, 2)
graph.connect(n114, n115, 2)
graph.connect(n115, n116, 4)
graph.connect(n116, n117, 2)
graph.connect(n117, n118, 2)
graph.connect(n118, n119, 3)
graph.connect(n119, n120, 2)
graph.connect(n120, n121, 2)
graph.connect(n121, n122, 2)
graph.connect(n122, n123, 3)
graph.connect(n123, n124, 3)
graph.connect(n124, n125, 2)
graph.connect(n125, n126, 3)
graph.connect(n126, n127, 3)
graph.connect(n127, n128, 2)
graph.connect(n128, n129, 2)
graph.connect(n129, n130, 2)
graph.connect(n130, n131, 3)
graph.connect(n131, n132, 2)
graph.connect(n132, n133, 3)
graph.connect(n133, n134, 3)
graph.connect(n134, n135, 2)

graph.connect(n136, n137, 3)
graph.connect(n137, n138, 3)
graph.connect(n138, n139, 3)
graph.connect(n139, n140, 3)
graph.connect(n140, n141, 3)
graph.connect(n141, n142, 3)
graph.connect(n142, n143, 3)
graph.connect(n143, n144, 2)
graph.connect(n144, n145, 2)
graph.connect(n145, n146, 3)
graph.connect(n146, n147, 2)
graph.connect(n147, n148, 2)
graph.connect(n148, n149, 3)
graph.connect(n149, n150, 2)
graph.connect(n150, n151, 3)
graph.connect(n151, n152, 4)
graph.connect(n152, n153, 3)
graph.connect(n153, n154, 3)
graph.connect(n154, n155, 3)
graph.connect(n155, n156, 4)
graph.connect(n156, n157, 3)
graph.connect(n157, n158, 3)

graph.connect(n159, n160, 4)
graph.connect(n160, n161, 3)
graph.connect(n161, n162, 3)
graph.connect(n162, n163, 3)
graph.connect(n163, n164, 3)
graph.connect(n164, n165, 3)
graph.connect(n165, n166, 3)

graph.connect(n167, n168, 4)
graph.connect(n168, n169, 3)
graph.connect(n169, n170, 4)
graph.connect(n170, n171, 2)
graph.connect(n171, n172, 3)
graph.connect(n172, n173, 4)
graph.connect(n173, n174, 3)
graph.connect(n174, n175, 3)
graph.connect(n175, n176, 3)
graph.connect(n176, n177, 2)
graph.connect(n177, n178, 2)

graph.connect(n179, n180, 3)
graph.connect(n180, n181, 3)
graph.connect(n181, n182, 3)
graph.connect(n182, n183, 2)
graph.connect(n183, n184, 3)
graph.connect(n184, n185, 2)
graph.connect(n185, n186, 2)
graph.connect(n186, n187, 2)
graph.connect(n187, n188, 3)
graph.connect(n188, n189, 2)
graph.connect(n189, n190, 3)
graph.connect(n190, n191, 2)
graph.connect(n191, n192, 2)
graph.connect(n192, n193, 3)
graph.connect(n193, n194, 4)
graph.connect(n194, n195, 2)
graph.connect(n195, n196, 2)
graph.connect(n196, n197, 2)
graph.connect(n197, n198, 2)
graph.connect(n198, n199, 3)
graph.connect(n199, n200, 2)
graph.connect(n200, n201, 2)
graph.connect(n201, n202, 2)
graph.connect(n202, n203, 3)

graph.connect(n204, n205, 2)
graph.connect(n205, n206, 2)
graph.connect(n206, n207, 2)
graph.connect(n207, n208, 3)
graph.connect(n208, n209, 2)
graph.connect(n209, n210, 3)
graph.connect(n210, n211, 3)
graph.connect(n211, n212, 2)
graph.connect(n212, n213, 3)
graph.connect(n213, n214, 3)
graph.connect(n214, n215, 3)
graph.connect(n215, n216, 3)
graph.connect(n216, n217, 2)
graph.connect(n217, n218, 2)
graph.connect(n218, n219, 4)
graph.connect(n219, n220, 3)
graph.connect(n220, n221, 3)
graph.connect(n221, n222, 3)
graph.connect(n222, n223, 2)
graph.connect(n223, n224, 3)
graph.connect(n224, n225, 2)
graph.connect(n225, n226, 2)

graph.connect(n227, n228, 3)
graph.connect(n228, n229, 3)
graph.connect(n229, n230, 5)
graph.connect(n230, n231, 1)
graph.connect(n231, n232, 2)
graph.connect(n232, n233, 2)

graph.connect(n234, n235, 3)
graph.connect(n235, n236, 3)
graph.connect(n236, n237, 3)
graph.connect(n237, n238, 3)
graph.connect(n238, n239, 3)
graph.connect(n239, n240, 2)
graph.connect(n240, n241, 2)
graph.connect(n241, n242, 3)
graph.connect(n242, n243, 5)
graph.connect(n243, n244, 3)
graph.connect(n244, n245, 2)
graph.connect(n245, n246, 2)
graph.connect(n246, n247, 2)
graph.connect(n247, n248, 3)
graph.connect(n248, n249, 3)
graph.connect(n249, n250, 2)
graph.connect(n250, n251, 4)
graph.connect(n251, n252, 3)
graph.connect(n252, n253, 4)
graph.connect(n253, n254, 2)
graph.connect(n254, n255, 2)
graph.connect(n255, n256, 3)
graph.connect(n256, n257, 2)
graph.connect(n257, n258, 2)
graph.connect(n258, n259, 3)
graph.connect(n259, n260, 3)
graph.connect(n260, n261, 3)
graph.connect(n261, n262, 4)
graph.connect(n262, n263, 3)
graph.connect(n263, n300, 3)
graph.connect(n234, n300, 4)

graph.connect(n264, n265, 3)
graph.connect(n265, n266, 2)
graph.connect(n266, n267, 4)
graph.connect(n267, n268, 3)
graph.connect(n268, n269, 3)
graph.connect(n269, n270, 4)
graph.connect(n270, n271, 3)
graph.connect(n271, n272, 3)
graph.connect(n272, n273, 2)
graph.connect(n273, n274, 3)

graph.connect(n275, n276, 5)
graph.connect(n276, n277, 3)
graph.connect(n277, n278, 3)
graph.connect(n278, n279, 3)
graph.connect(n279, n280, 3)
graph.connect(n280, n281, 4)
graph.connect(n281, n282, 3)
graph.connect(n282, n283, 4)
graph.connect(n283, n284, 4)
graph.connect(n284, n285, 4)
graph.connect(n285, n286, 4)
graph.connect(n286, n287, 7)
graph.connect(n287, n288, 7)
graph.connect(n288, n289, 6)
graph.connect(n289, n290, 4)
graph.connect(n290, n291, 3)
graph.connect(n291, n292, 5)
graph.connect(n292, n293, 3)
graph.connect(n293, n294, 3)
graph.connect(n294, n295, 3)
graph.connect(n295, n296, 3)
graph.connect(n296, n297, 3)
graph.connect(n297, n298, 3)
graph.connect(n298, n299, 4)

graph.connect(n301, n302, 3)
graph.connect(n302, n303, 3)
graph.connect(n303, n304, 4)
graph.connect(n304, n305, 3)
graph.connect(n305, n306, 3)
graph.connect(n306, n307, 3)
graph.connect(n307, n0, 3)
graph.connect(n0, n308, 5)
graph.connect(n308, n309, 4)
graph.connect(n309, n310, 3)
graph.connect(n310, n311, 3)
graph.connect(n311, n312, 4)
graph.connect(n312, n313, 3)
graph.connect(n313, n314, 8)
graph.connect(n314, n315, 5)
graph.connect(n315, n316, 6)
graph.connect(n316, n317, 6)
graph.connect(n317, n318, 3)
graph.connect(n318, n319, 3)
graph.connect(n319, n320, 3)
graph.connect(n320, n321, 3)
graph.connect(n321, n322, 2)
graph.connect(n322, n323, 3)
graph.connect(n323, n324, 3)
graph.connect(n324, n325, 3)
graph.connect(n325, n326, 2)
graph.connect(n326, n327, 5)
graph.connect(n327, n328, 4)
graph.connect(n328, n329, 3)
graph.connect(n329, n330, 3)
graph.connect(n330, n331, 4)
graph.connect(n331, n332, 4)
graph.connect(n332, n333, 3)
graph.connect(n333, n334, 3)
graph.connect(n334, n335, 4)

graph.connect_name('Волоколамская 3', 'Волоколамская D2', 7)
graph.connect_name('Кунцевская 3', 'Кунцевская 11', 5)
graph.connect_name('Кунцевская 3', 'Кунцевская 4', 3)
graph.connect_name('Кунцевская 3', 'Кунцевская D1', 12)
graph.connect_name('Славянский бульвар 3', 'Славянский бульвар D1', 5)
graph.connect_name('Парк победы 3', 'Парк победы 8', 2)
graph.connect_name('Киевская 3', 'Киевская 4', 6)
graph.connect_name('Киевская 3', 'Киевская 5', 3)
graph.connect_name('Арбатская 3', 'Александровский сад', 3)
graph.connect_name('Арбатская 3', 'Библиотека имени Ленина', 5)
graph.connect_name('Арбатская 3', 'Боровицкая', 4)
graph.connect_name('Площадь революции', 'Охотный ряд', 10)
graph.connect_name('Площадь революции', 'Театральная', 5)
graph.connect_name('Курская 3', 'Чкаловская', 4)
graph.connect_name('Курская 3', 'Курская D2', 8)
graph.connect_name('Курская 3', 'Курская 5', 4)
graph.connect_name('Электрозаводская 3', 'Электрозаводская 15', 8)
graph.connect_name('Партизанская', 'Измайлово', 10)

graph.connect_name('Бульвар Рокоссовского 1', 'Бульвар Рокоссовского 14', 10)
graph.connect_name('Локомотив', 'Черкизовская', 6)
graph.connect_name('Комсомольская 1', 'Комсомольская 5', 5)
graph.connect_name('Комсомольская 1', 'Площадь трёх вокзалов', 9)
graph.connect_name('Чистые пруды', 'Тургеневская', 3)
graph.connect_name('Сретенский бульвар', 'Чистые пруды', 4)
graph.connect_name('Кузнецкий мост', 'Лубянка', 4)
graph.connect_name('Охотный ряд', 'Театральная', 5)
graph.connect_name('Александровский сад', 'Библиотека имени Ленина', 3)
graph.connect_name('Библиотека имени Ленина', 'Боровицкая', 6)
graph.connect_name('Парк культуры 1', 'Парк культуры 5', 5)
graph.connect_name('Лужники', 'Спортивная', 8)
graph.connect_name('Проспект Вернадского 1', 'Проспект Вернадского 11', 3)

graph.connect_name('Войковская', 'Балтийская', 14)
graph.connect_name('Войковская', 'Стрешнево D2', 14)
graph.connect_name('Динамо', 'Петровский парк', 6)
graph.connect_name('Белорусская 2', 'Белорусская 5', 3)
graph.connect_name('Белорусская 2', 'Белорусская D1', 8)
graph.connect_name('Тверская', 'Пушкинская', 3)
graph.connect_name('Тверская', 'Чеховская', 4)
graph.connect_name('Новокузнецкая', 'Третьяковская 6', 3)
graph.connect_name('Новокузнецкая', 'Третьяковская 8', 3)
graph.connect_name('Павелецкая 2', 'Павелецкая 5', 4)
graph.connect_name('Автозаводская 2', 'Автозаводская 14', 11)
graph.connect_name('Автозаводская 2', 'Автозаводская КМ', 5)
graph.connect_name('Орехово 2', 'Орехово КМ', 7)
graph.connect_name('Красногвардейская', 'Зябликово', 3)

graph.connect_name('Кунцевская 4', 'Кунцевская 11', 5)
graph.connect_name('Кунцевская D1', 'Кунцевская 4', 12)
graph.connect_name('Фили 4', 'Фили D1', 6)
graph.connect_name('Кутузовская 4', 'Кутузовская 14', 6)
graph.connect_name('Деловой центр 14', 'Международная', 7)
graph.connect_name('Международная', 'Тестовская', 12)
graph.connect_name('Киевская 4', 'Киевская 5', 6)
graph.connect_name('Выставочная', 'Деловой центр 8', 3)
graph.connect_name('Выставочная', 'Деловой центр 11', 6)

graph.connect_name('Баррикадная', 'Краснопресненская', 3)
graph.connect_name('Белорусская 5', 'Белорусская D1', 9)
graph.connect_name('Менделеевская', 'Новослободская', 3)
graph.connect_name('Проспект мира 5', 'Проспект мира 6', 4)
graph.connect_name('Комсомольская 1', 'Площадь трёх вокзалов', 9)
graph.connect_name('Курская 5', 'Чкаловская', 6)
graph.connect_name('Курская 5', 'Курская D2', 10)
graph.connect_name('Таганская 7', 'Таганская 5', 3)
graph.connect_name('Таганская 5', 'Марксистская', 3)
graph.connect_name('Серпуховская', 'Добрынинская', 3)
graph.connect_name('Октябрьская 5', 'Октябрьская 6', 3)

graph.connect_name('Ботанический сад 6', 'Ботанический сад 14', 6)
graph.connect_name('Рижская 6', 'Рижская D2', 9)
graph.connect_name('Тургеневская', 'Сретенский бульвар', 3)
graph.connect_name('Китай-город 6', 'Китай-город 7', 2)

print([(weight, [n.name for n in node]) for (weight, node) in graph.find()])

